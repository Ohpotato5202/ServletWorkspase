/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.89
 * Generated at: 2024-06-03 03:09:04 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.standard;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class useBean_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.LinkedHashSet<>(3);
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    if (!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSP들은 오직 GET, POST 또는 HEAD 메소드만을 허용합니다. Jasper는 OPTIONS 메소드 또한 허용합니다.");
        return;
      }
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("<!-- \r\n");
      out.write("	해당 스코프에서 id와 동일한 속성명으로 저장된 객체를 가져옴\r\n");
      out.write("	존재하지 않을 때는 해당 타입의 객체를 하나 생성.\r\n");
      out.write("	\r\n");
      out.write("	(property 접근방식)\r\n");
      out.write("	- getter : getter메서드에서 get을 제외하고 소문자로 시작하는 이름 -> name -> getName();\r\n");
      out.write("	- setter : setter에서 set을 제외한 소문자로 시작하는 이름 -> age -> setAge(value);\r\n");
      out.write(" -->\r\n");
      com.kh.person.Person honngd = null;
      honngd = (com.kh.person.Person) _jspx_page_context.getAttribute("honngd", javax.servlet.jsp.PageContext.REQUEST_SCOPE);
      if (honngd == null){
        honngd = new com.kh.person.Person();
        _jspx_page_context.setAttribute("honngd", honngd, javax.servlet.jsp.PageContext.REQUEST_SCOPE);
      }
      out.write('\r');
      out.write('\n');
      com.kh.person.Person sinsa = null;
      sinsa = (com.kh.person.Person) _jspx_page_context.getAttribute("sinsa", javax.servlet.jsp.PageContext.PAGE_SCOPE);
      if (sinsa == null){
        sinsa = new com.kh.person.Person();
        _jspx_page_context.setAttribute("sinsa", sinsa, javax.servlet.jsp.PageContext.PAGE_SCOPE);
      }
      out.write("\r\n");
      out.write("\r\n");
      out.write("<!-- 위에 생성된 객체 호출하는 구문 -->\r\n");
      org.apache.jasper.runtime.JspRuntimeLibrary.introspecthelper(_jspx_page_context.findAttribute("sinsa"), "id", "ssinsa", null, null, false);
      out.write('\r');
      out.write('\n');
      org.apache.jasper.runtime.JspRuntimeLibrary.introspecthelper(_jspx_page_context.findAttribute("sinsa"), "name", "신사임당", null, null, false);
      out.write('\r');
      out.write('\n');
      org.apache.jasper.runtime.JspRuntimeLibrary.introspecthelper(_jspx_page_context.findAttribute("sinsa"), "gender", "여", null, null, false);
      out.write('\r');
      out.write('\n');
      org.apache.jasper.runtime.JspRuntimeLibrary.introspecthelper(_jspx_page_context.findAttribute("sinsa"), "age", "50", null, null, false);
      out.write('\r');
      out.write('\n');
      org.apache.jasper.runtime.JspRuntimeLibrary.introspecthelper(_jspx_page_context.findAttribute("sinsa"), "married", "true", null, null, false);
      out.write("\r\n");
      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("<meta charset=\"UTF-8\">\r\n");
      out.write("<title>Insert title here</title>\r\n");
      out.write("<style>\r\n");
      out.write("table, th, td {\r\n");
      out.write("    border: 1px solid #000;\r\n");
      out.write("    padding: 5px;\r\n");
      out.write("    margin-bottom: 20px;\r\n");
      out.write("}\r\n");
      out.write("</style>\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("	<h1>useBean</h1>\r\n");
      out.write("	<table>\r\n");
      out.write("		<tr>\r\n");
      out.write("			<th>id</th>\r\n");
      out.write("			<td>");
      out.write(org.apache.jasper.runtime.JspRuntimeLibrary.toString((((com.kh.person.Person)_jspx_page_context.findAttribute("honngd")).getId())));
      out.write("</td>\r\n");
      out.write("			<!-- id에 대한 속성을 가져오는 문법 -->\r\n");
      out.write("		</tr>\r\n");
      out.write("		<tr>\r\n");
      out.write("			<th>name</th>\r\n");
      out.write("			<td>");
      out.write(org.apache.jasper.runtime.JspRuntimeLibrary.toString((((com.kh.person.Person)_jspx_page_context.findAttribute("honngd")).getName())));
      out.write("</td>\r\n");
      out.write("			<!-- id에 대한 속성을 가져오는 문법 -->\r\n");
      out.write("		</tr>\r\n");
      out.write("		<tr>\r\n");
      out.write("			<th>gender</th>\r\n");
      out.write("			<td>");
      out.write(org.apache.jasper.runtime.JspRuntimeLibrary.toString((((com.kh.person.Person)_jspx_page_context.findAttribute("honngd")).getGender())));
      out.write("</td>\r\n");
      out.write("			<!-- id에 대한 속성을 가져오는 문법 -->\r\n");
      out.write("		</tr>\r\n");
      out.write("		<tr>\r\n");
      out.write("			<th>age</th>\r\n");
      out.write("			<td>");
      out.write(org.apache.jasper.runtime.JspRuntimeLibrary.toString((((com.kh.person.Person)_jspx_page_context.findAttribute("honngd")).getAge())));
      out.write("</td>\r\n");
      out.write("			<!-- id에 대한 속성을 가져오는 문법 -->\r\n");
      out.write("		</tr>\r\n");
      out.write("		<tr>\r\n");
      out.write("			<th>married</th>\r\n");
      out.write("			<td>");
      out.write(org.apache.jasper.runtime.JspRuntimeLibrary.toString((((com.kh.person.Person)_jspx_page_context.findAttribute("honngd")).isMarried())));
      out.write("</td>\r\n");
      out.write("			<!-- id에 대한 속성을 가져오는 문법 -->\r\n");
      out.write("		</tr>\r\n");
      out.write("	</table>\r\n");
      out.write("	\r\n");
      out.write("		<table>\r\n");
      out.write("		<tr>\r\n");
      out.write("			<th>id</th>\r\n");
      out.write("			<td>");
      out.write(org.apache.jasper.runtime.JspRuntimeLibrary.toString((((com.kh.person.Person)_jspx_page_context.findAttribute("sinsa")).getId())));
      out.write("</td>\r\n");
      out.write("			<!-- id에 대한 속성을 가져오는 문법 -->\r\n");
      out.write("		</tr>\r\n");
      out.write("		<tr>\r\n");
      out.write("			<th>name</th>\r\n");
      out.write("			<td>");
      out.write(org.apache.jasper.runtime.JspRuntimeLibrary.toString((((com.kh.person.Person)_jspx_page_context.findAttribute("sinsa")).getName())));
      out.write("</td>\r\n");
      out.write("			<!-- id에 대한 속성을 가져오는 문법 -->\r\n");
      out.write("		</tr>\r\n");
      out.write("		<tr>\r\n");
      out.write("			<th>gender</th>\r\n");
      out.write("			<td>");
      out.write(org.apache.jasper.runtime.JspRuntimeLibrary.toString((((com.kh.person.Person)_jspx_page_context.findAttribute("sinsa")).getGender())));
      out.write("</td>\r\n");
      out.write("			<!-- id에 대한 속성을 가져오는 문법 -->\r\n");
      out.write("		</tr>\r\n");
      out.write("		<tr>\r\n");
      out.write("			<th>age</th>\r\n");
      out.write("			<td>");
      out.write(org.apache.jasper.runtime.JspRuntimeLibrary.toString((((com.kh.person.Person)_jspx_page_context.findAttribute("sinsa")).getAge())));
      out.write("</td>\r\n");
      out.write("			<!-- id에 대한 속성을 가져오는 문법 -->\r\n");
      out.write("		</tr>\r\n");
      out.write("		<tr>\r\n");
      out.write("			<th>married</th>\r\n");
      out.write("			<td>");
      out.write(org.apache.jasper.runtime.JspRuntimeLibrary.toString((((com.kh.person.Person)_jspx_page_context.findAttribute("sinsa")).isMarried())));
      out.write("</td>\r\n");
      out.write("			<!-- id에 대한 속성을 가져오는 문법 -->\r\n");
      out.write("		</tr>\r\n");
      out.write("	</table>\r\n");
      out.write("	\r\n");
      out.write("	\r\n");
      out.write("</body>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
